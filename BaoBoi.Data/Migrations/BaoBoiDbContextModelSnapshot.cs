// <auto-generated />
using System;
using BaoBoi.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaoBoi.Data.Migrations
{
    [DbContext(typeof(BaoBoiDbContext))]
    partial class BaoBoiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BaoBoi.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Key");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs");

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            Value = "This is home page of Bao Boi Official"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            Value = "This is keyword of Bao Boi Official"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            Value = "This is description of Bao Boi Official"
                        });
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "4631322c-0ffa-4448-acb4-d6b04dd436d9",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "27726302-02e6-4818-8d5a-4d66e958b543",
                            Dob = new DateTime(1996, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hieule.9420@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Le",
                            LastName = "Hieu",
                            LockoutEnabled = false,
                            NormalizedEmail = "hieule.9420@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEL1ZuAJj5A0L/MJ9uk//+gi47Bk31Qsq33LdrRekcy823pchtN6wQej0lHe6xlakDQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsShowOnHome")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.CategoryTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CategoryTranslations");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = "vi",
                            IsDefault = true,
                            Name = "Tiếng Việt"
                        },
                        new
                        {
                            Id = "en",
                            IsDefault = false,
                            Name = "English"
                        });
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.LoiChuc", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CauChuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CauChuc");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.HasKey("ID");

                    b.ToTable("LoiChuc");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CauChuc = "Mừng 2021 phát tài phát lộc. Tiền vô xồng xộc, tiền ra từ từ. Sức khỏe có dư, công danh tấn tới. Tình duyên phơi phới,hạnh phúc thăng hoa.Xin chúc mọi nhà một năm đại thắng.",
                            Type = 0
                        },
                        new
                        {
                            ID = 2,
                            CauChuc = "Năm mới đã tới thật gần, chúc cho đại gia đình một năm mới An Khang Thịnh Vượng",
                            Type = 0
                        },
                        new
                        {
                            ID = 3,
                            CauChuc = "Năm mới với bao điều thú vị đang đến với bạn. Chúc bạn có đủ niềm đam mê để khám phá và tận hưởng từng ngày tươi đẹp của cuộc sống mới",
                            Type = 0
                        },
                        new
                        {
                            ID = 4,
                            CauChuc = "Tết đến, xuân về, an khang thịnh vượng, phát tài phát lộc, sức khỏe dồi dào, mọi điều như ý",
                            Type = 0
                        },
                        new
                        {
                            ID = 5,
                            CauChuc = "Chúc mọi người năm mới An khang thịnh vượng, tài lộc đầy nhà, con cháu sum vầy, một năm bình an và sung túc",
                            Type = 0
                        },
                        new
                        {
                            ID = 6,
                            CauChuc = "Có thể những niềm vui của năm mới kéo dài mãi mãi trong cuộc sống của bạn. Có thể bạn sẽ tìm thấy được ánh sáng dẫn bạn đến thành công, cái đích mà bạn mong muốn. Chúc mừng năm mới",
                            Type = 0
                        },
                        new
                        {
                            ID = 7,
                            CauChuc = "Hãy cùng vẫy tay tạm biệt năm cũ, đón nhận năm mới với nhiều ước mơ, hoài bão và cả hy vọng. Chúc bạn năm mới tràn ngập niềm vui và hạnh phúc",
                            Type = 0
                        },
                        new
                        {
                            ID = 8,
                            CauChuc = "May all your new year wishes come true",
                            Type = 0
                        },
                        new
                        {
                            ID = 9,
                            CauChuc = "Best wishes for a happy and successful new year",
                            Type = 0
                        },
                        new
                        {
                            ID = 10,
                            CauChuc = "Wishing you all the magic of the new year",
                            Type = 0
                        },
                        new
                        {
                            ID = 11,
                            CauChuc = "Let your spirit soar and have a joy-filled new year",
                            Type = 0
                        });
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.PhoneUser", b =>
                {
                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("Phone");

                    b.Property<double?>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("Amount");

                    b.Property<DateTime?>("DatePay")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatePay");

                    b.Property<DateTime?>("DatePlay")
                        .HasColumnType("datetime2")
                        .HasColumnName("DatePlay");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<bool>("Pay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Pay");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Phone");

                    b.ToTable("PhoneUser");

                    b.HasData(
                        new
                        {
                            Phone = "0967738406",
                            Amount = 0.0,
                            Name = "Admin",
                            Pay = false,
                            Type = 5
                        },
                        new
                        {
                            Phone = "0903754094",
                            Amount = 0.0,
                            Name = "Anh Bình CIMB",
                            Pay = false,
                            Type = 2
                        },
                        new
                        {
                            Phone = "0901239894",
                            Amount = 0.0,
                            Name = "Anh Doanh CIMB",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0967440028",
                            Amount = 0.0,
                            Name = "Anh Đức Anh",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0907603537",
                            Amount = 0.0,
                            Name = "Anh Hiếu CIMB",
                            Pay = false,
                            Type = 2
                        },
                        new
                        {
                            Phone = "0332160345",
                            Amount = 0.0,
                            Name = "Anh Hoà",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0775080990",
                            Amount = 0.0,
                            Name = "Anh khải",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0327489656",
                            Amount = 0.0,
                            Name = "Anh Nguyên",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0355559738",
                            Amount = 0.0,
                            Name = "Anh Nhanh",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0935201352",
                            Amount = 0.0,
                            Name = "Anh Quân",
                            Pay = false,
                            Type = 2
                        },
                        new
                        {
                            Phone = "0908233009",
                            Amount = 0.0,
                            Name = "Anh Thi",
                            Pay = false,
                            Type = 2
                        },
                        new
                        {
                            Phone = "0962857858",
                            Amount = 0.0,
                            Name = "Anh Trung Design",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0982848104",
                            Amount = 0.0,
                            Name = "Ba",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0912520927",
                            Amount = 0.0,
                            Name = "Bà Nội",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0359271374",
                            Amount = 0.0,
                            Name = "Bảo Bối",
                            Pay = false,
                            Type = 5
                        },
                        new
                        {
                            Phone = "0912298018",
                            Amount = 0.0,
                            Name = "Bò",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0986522539",
                            Amount = 0.0,
                            Name = "Cậu Tèo",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0388915223",
                            Amount = 0.0,
                            Name = "Chị Châm",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0397667520",
                            Amount = 0.0,
                            Name = "Chị Dung",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0397280420",
                            Amount = 0.0,
                            Name = "Chị Giàu",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0909047892",
                            Amount = 0.0,
                            Name = "Chị Lành Enrich",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0342103967",
                            Amount = 0.0,
                            Name = "Chị Mai Anh",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0354755733",
                            Amount = 0.0,
                            Name = "Chị Phiên",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0909820075",
                            Amount = 0.0,
                            Name = "Chị Phương Anh",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0396813296",
                            Amount = 0.0,
                            Name = "Chị Thảo Vy",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0908991164",
                            Amount = 0.0,
                            Name = "Chị Thúy Vy",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0925347343",
                            Amount = 0.0,
                            Name = "Chị Trâm",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0329613873",
                            Amount = 0.0,
                            Name = "Chị Trang",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0933184113",
                            Amount = 0.0,
                            Name = "Chị Trinh",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0968338488",
                            Amount = 0.0,
                            Name = "Chị Trinh",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0372303720",
                            Amount = 0.0,
                            Name = "Chong Yau CIMB",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0383539845",
                            Amount = 0.0,
                            Name = "Chức",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0984903994",
                            Amount = 0.0,
                            Name = "Chức",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0327370037",
                            Amount = 0.0,
                            Name = "Cô Dung",
                            Pay = false,
                            Type = 3
                        },
                        new
                        {
                            Phone = "0975723759",
                            Amount = 0.0,
                            Name = "Cô Nhung Trọ",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0938091809",
                            Amount = 0.0,
                            Name = "Cô Sương - PLS",
                            Pay = false,
                            Type = 2
                        },
                        new
                        {
                            Phone = "0979224841",
                            Amount = 0.0,
                            Name = "Cô Trinh",
                            Pay = false,
                            Type = 3
                        },
                        new
                        {
                            Phone = "0963463845",
                            Amount = 0.0,
                            Name = "Đại",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0989040813",
                            Amount = 0.0,
                            Name = "Đăng Phúc",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0568200441",
                            Amount = 0.0,
                            Name = "Dat La",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0378109170",
                            Amount = 0.0,
                            Name = "Đẹt",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0776611227",
                            Amount = 0.0,
                            Name = "Dì Chúc",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0386884721",
                            Amount = 0.0,
                            Name = "Duyên",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0358050165",
                            Amount = 0.0,
                            Name = "Duyên",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0373514988",
                            Amount = 0.0,
                            Name = "Gấm",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0344087516",
                            Amount = 0.0,
                            Name = "Hà Trang",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0378015202",
                            Amount = 0.0,
                            Name = "Hí",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0327141466",
                            Amount = 0.0,
                            Name = "Hí",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0337253858",
                            Amount = 0.0,
                            Name = "Hí",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0978374265",
                            Amount = 0.0,
                            Name = "Hiệp",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0962957940",
                            Amount = 0.0,
                            Name = "Hoàng",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0339610931",
                            Amount = 0.0,
                            Name = "Hoàng",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0563419551",
                            Amount = 0.0,
                            Name = "Hợi",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0394137496",
                            Amount = 0.0,
                            Name = "Hợi",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0916789498",
                            Amount = 0.0,
                            Name = "Hợi",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0976016307",
                            Amount = 0.0,
                            Name = "Hồng",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0367257428",
                            Amount = 0.0,
                            Name = "Hương",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0339427771",
                            Amount = 0.0,
                            Name = "Huyền Đen",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0386586120",
                            Amount = 0.0,
                            Name = "Ka Ram",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0774992232",
                            Amount = 0.0,
                            Name = "Lê Thịnh",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0354171005",
                            Amount = 0.0,
                            Name = "Lu",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0359516706",
                            Amount = 0.0,
                            Name = "Mẹ",
                            Pay = false,
                            Type = 4
                        },
                        new
                        {
                            Phone = "0329003084",
                            Amount = 0.0,
                            Name = "Mỹ Thanh",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0375188165",
                            Amount = 0.0,
                            Name = "Mỹ Thanh",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0332263410",
                            Amount = 0.0,
                            Name = "Ngân Muội",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0969853537",
                            Amount = 0.0,
                            Name = "Nghĩa",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0986839804",
                            Amount = 0.0,
                            Name = "Nghĩa",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0374094726",
                            Amount = 0.0,
                            Name = "Ngoan",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0388855622",
                            Amount = 0.0,
                            Name = "Nhật",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0934452821",
                            Amount = 0.0,
                            Name = "Nhật",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0327090718",
                            Amount = 0.0,
                            Name = "Nhung",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0349925559",
                            Amount = 0.0,
                            Name = "Oanh Cao",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0978939976",
                            Amount = 0.0,
                            Name = "Phạm Linh Linh",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0978225695",
                            Amount = 0.0,
                            Name = "Phú",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0333262399",
                            Amount = 0.0,
                            Name = "Quân",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0394204227",
                            Amount = 0.0,
                            Name = "Quốc Hưng",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0354023098",
                            Amount = 0.0,
                            Name = "Quốc Thông",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0929207097",
                            Amount = 0.0,
                            Name = "Quốc Thông",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0375767266",
                            Amount = 0.0,
                            Name = "Quyền",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0396513565",
                            Amount = 0.0,
                            Name = "Sáng",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0962744683",
                            Amount = 0.0,
                            Name = "Sơn Xù",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "60162175578",
                            Amount = 0.0,
                            Name = "Stephen",
                            Pay = false,
                            Type = 1
                        },
                        new
                        {
                            Phone = "0354601772",
                            Amount = 0.0,
                            Name = "Sumi",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0989538072",
                            Amount = 0.0,
                            Name = "Sven",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0349548560",
                            Amount = 0.0,
                            Name = "Sỹ",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "1",
                            Amount = 0.0,
                            Name = "Test",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0969102120",
                            Amount = 0.0,
                            Name = "Thái",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0342829455",
                            Amount = 0.0,
                            Name = "Thảo",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0914290456",
                            Amount = 0.0,
                            Name = "Thầy Lộc",
                            Pay = false,
                            Type = 3
                        },
                        new
                        {
                            Phone = "0908202983",
                            Amount = 0.0,
                            Name = "Thầy Vĩnh",
                            Pay = false,
                            Type = 3
                        },
                        new
                        {
                            Phone = "0382115375",
                            Amount = 0.0,
                            Name = "Thịnh",
                            Pay = false,
                            Type = 2
                        },
                        new
                        {
                            Phone = "0976393245",
                            Amount = 0.0,
                            Name = "Thơ",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0989764925",
                            Amount = 0.0,
                            Name = "Thu Trang",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0332950027",
                            Amount = 0.0,
                            Name = "Thuận",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0363944069",
                            Amount = 0.0,
                            Name = "Thuý",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0388825432",
                            Amount = 0.0,
                            Name = "Thuý",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0329979306",
                            Amount = 0.0,
                            Name = "Thuý",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0968113772",
                            Amount = 0.0,
                            Name = "Thuý",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0369712191",
                            Amount = 0.0,
                            Name = "Tô Bướm",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0986179154",
                            Amount = 0.0,
                            Name = "Toàn",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0367816473",
                            Amount = 0.0,
                            Name = "Tráng",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0376545320",
                            Amount = 0.0,
                            Name = "Tráng",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0966785834",
                            Amount = 0.0,
                            Name = "Trang Tuyền",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0348879740",
                            Amount = 0.0,
                            Name = "Trí Thông",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0394959832",
                            Amount = 0.0,
                            Name = "Trinh Toeic",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0376093038",
                            Amount = 0.0,
                            Name = "Tường Vi",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0566820006",
                            Amount = 0.0,
                            Name = "Ù",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0987221504",
                            Amount = 0.0,
                            Name = "Ursa",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0978086565",
                            Amount = 0.0,
                            Name = "Vân Muội Muội",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0399658291",
                            Amount = 0.0,
                            Name = "Vĩ",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0377377487",
                            Amount = 0.0,
                            Name = "Vĩ",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0376463339",
                            Amount = 0.0,
                            Name = "Vũ",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0886525647",
                            Amount = 0.0,
                            Name = "Vũ Đạt",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0968270836",
                            Amount = 0.0,
                            Name = "Vũ Linh",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0977811837",
                            Amount = 0.0,
                            Name = "Xuân",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0353264570",
                            Amount = 0.0,
                            Name = "Xuân Nam",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0163673765",
                            Amount = 0.0,
                            Name = "Yee Kuan",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0368013361",
                            Amount = 0.0,
                            Name = "Yến",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "0388991387",
                            Amount = 0.0,
                            Name = "Yến",
                            Pay = false,
                            Type = 0
                        },
                        new
                        {
                            Phone = "60123836370",
                            Amount = 0.0,
                            Name = "Yew Khai Shing",
                            Pay = false,
                            Type = 0
                        });
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.ProductInCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductInCategories");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.ProductTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SeoAlias")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTranslations");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("ApplyForAll")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryIds")
                        .HasColumnType("int");

                    b.Property<int>("ProductIds")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExternalTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Cart", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaoBoi.Data.Entities.AppUser", "AppUser")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.CategoryTranslation", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.Category", "Category")
                        .WithMany("CategoryTranslations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaoBoi.Data.Entities.Language", "Language")
                        .WithMany("CategoryTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Order", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaoBoi.Data.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.ProductInCategory", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.Category", "Category")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaoBoi.Data.Entities.Product", "Product")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.ProductTranslation", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.Language", "Language")
                        .WithMany("ProductTranslations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaoBoi.Data.Entities.Product", "Product")
                        .WithMany("ProductTranslations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Transaction", b =>
                {
                    b.HasOne("BaoBoi.Data.Entities.AppUser", "AppUser")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Category", b =>
                {
                    b.Navigation("CategoryTranslations");

                    b.Navigation("ProductInCategories");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Language", b =>
                {
                    b.Navigation("CategoryTranslations");

                    b.Navigation("ProductTranslations");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BaoBoi.Data.Entities.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductInCategories");

                    b.Navigation("ProductTranslations");
                });
#pragma warning restore 612, 618
        }
    }
}
